name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Create virtual environment
      run: uv venv --python ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        uv pip install -e .[test]
    
    - name: Run smoke tests
      run: |
        uv run pytest tests/test_smoke.py -v
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
    
    - name: Run unit tests
      run: |
        uv run pytest tests/test_config.py tests/test_parsers.py tests/test_cli.py -v
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
    
    - name: Run integration tests
      run: |
        uv run pytest tests/test_integration.py -v
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Create virtual environment
      run: uv venv
    
    - name: Install dependencies
      run: uv pip install -e .[dev]
    
    - name: Run linting
      run: |
        uv run flake8 winnower/ tests/
        uv run black --check winnower/ tests/
        uv run mypy winnower/